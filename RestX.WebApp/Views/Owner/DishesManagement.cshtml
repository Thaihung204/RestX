@model RestX.WebApp.Models.ViewModels.DishesManagementViewModel

@{
    ViewData["Title"] = "Dishes Management";
    Layout = "~/Views/Shared/_OwnerLayout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="mb-4">Dishes Management</h2>

            <div class="d-flex align-items-center gap-2 mb-4">

                <div class="flex-grow-1">
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="bi bi-search"></i>
                        </span>
                        <input type="text" class="form-control" id="searchInput" placeholder="Search dish name...">
                    </div>
                </div>

                <button type="button" class="btn btn-primary" onclick="searchDishes()">
                    Search
                </button>

                <a class="btn btn-primary" href="@Url.Action("CreateDish", "Owner", new { ownerId = Model.OwnerId })">
                    <i class="bi bi-plus-lg"></i> Add New Dish
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table align-middle table-hover" id="dishesTable">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col">Name</th>
                                    <th scope="col">Category</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Status</th>
                                    <th scope="col" class="text-end">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Dishes != null && Model.Dishes.Any())
                                {
                                    foreach (var dish in Model.Dishes)
                                    {
                                        <tr class="dish-row">
                                            <td class="dish-name">@dish.Name</td>
                                            <td class="dish-category">@dish.CategoryName</td>
                                            <td class="dish-price">@dish.Price.ToString("C")</td>
                                            <td>
                                                @if (dish.IsActive == true)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                            </td>
                                            <td class="text-end">
                                                <a class="btn btn-sm btn-info" href="@Url.Action("DetailDish", "Owner", new { id = dish.Id, ownerId = Model.OwnerId })">
                                                    <i class="bi bi-info-circle"></i> Detail
                                                </a>
                                                <a class="btn btn-sm btn-warning" href="@Url.Action("EditDish", "Owner", new { id = dish.Id, ownerId = Model.OwnerId })">
                                                    <i class="bi bi-pencil-square"></i> Edit
                                                </a>
                                                <a class="btn btn-sm btn-danger" href="@Url.Action("DeleteDish", "Owner", new { id = dish.Id, ownerId = Model.OwnerId })" onclick="return confirm('Are you sure?');">
                                                    <i class="bi bi-trash"></i> Delete
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr id="noDishesRow">
                                        <td colspan="5" class="text-center text-muted">No dishes found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div id="noSearchResults" class="text-center text-muted py-4" style="display: none;">
                        <i class="bi bi-search fs-1 mb-3"></i>
                        <p>No dishes found matching your search criteria.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="/lib/jquery/dist/jquery.min.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/lib/simplebar/dist/simplebar.js"></script>
    <script src="/js/sidebarmenu.js"></script>
    <script src="/js/app.min.js"></script>

    <script>
        function searchDishes() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase().trim();
            const tableRows = document.querySelectorAll('.dish-row');
            const noResultsDiv = document.getElementById('noSearchResults');
            let visibleRows = 0;

            tableRows.forEach(row => {
                const dishName = row.querySelector('.dish-name').textContent.toLowerCase();
                const dishCategory = row.querySelector('.dish-category').textContent.toLowerCase();

                if (dishName.includes(searchTerm) || dishCategory.includes(searchTerm)) {
                    row.style.display = '';
                    visibleRows++;
                } else {
                    row.style.display = 'none';
                }
            });

            // Show/hide no results message
            if (visibleRows === 0 && searchTerm !== '') {
                noResultsDiv.style.display = 'block';
            } else {
                noResultsDiv.style.display = 'none';
            }
        }

        function clearSearch() {
            document.getElementById('searchInput').value = '';
            const tableRows = document.querySelectorAll('.dish-row');
            const noResultsDiv = document.getElementById('noSearchResults');

            tableRows.forEach(row => {
                row.style.display = '';
            });

            noResultsDiv.style.display = 'none';
        }

        // Enable search on Enter key press
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                searchDishes();
            }
        });

        // Real-time search as user types
        document.getElementById('searchInput').addEventListener('input', function() {
            searchDishes();
        });
    </script>
}