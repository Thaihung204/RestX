@model RestX.WebApp.Models.ViewModels.StaffManagementViewModel

@{
    ViewData["Title"] = "Staff Management";
    Layout = "~/Views/Shared/_OwnerLayout.cshtml";
}

<style>
    :root {
        --primary-color: #4A3AFF;
        --primary-hover-color: #3e31cc;
        --border-color: #e9ecef;
        --text-color-light: #6c757d;
        --background-light: #f8f9fa;
        --card-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
        --border-radius: 12px;
        --action-view-bg: #e7f3ff;
        --action-view-text: #007bff;
        --action-edit-bg: #fff0e0;
        --action-edit-text: #ff9f43;
        --action-delete-bg: #ffe6e6;
        --action-delete-text: #dc3545;
    }

    body {
        background-color: var(--background-light);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 0 0.5rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: #1a1a1a;
        margin: 0;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    /* Modern Search Bar */
    .search-container {
        position: relative;
        flex-grow: 1;
        max-width: 400px;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 3rem;
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        font-size: 0.95rem;
        background-color: #fff;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
    }

        .search-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(74, 58, 255, 0.1);
        }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-color-light);
        font-size: 1rem;
    }

    /* Modern Button Styles */
    .btn-modern {
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        border: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        text-decoration: none;
    }

    .btn-primary-modern {
        background: linear-gradient(135deg, var(--primary-color) 0%, #6366f1 100%);
        color: white;
        box-shadow: 0 4px 12px rgba(74, 58, 255, 0.25);
    }

        .btn-primary-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(74, 58, 255, 0.35);
            color: white;
        }

    /* Modern Card */
    .modern-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        border: none;
        overflow: hidden;
    }

    .card-body-modern {
        padding: 1.5rem;
    }

    /* Enhanced Table */
    .modern-table {
        margin-bottom: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .modern-table thead th {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: none;
            padding: 1.25rem 1rem;
            font-weight: 700;
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            color: #4a5568;
            border-bottom: 2px solid var(--border-color);
        }

            .modern-table thead th:first-child {
                border-top-left-radius: var(--border-radius);
            }

            .modern-table thead th:last-child {
                border-top-right-radius: var(--border-radius);
            }

        .modern-table tbody tr {
            background: white;
            transition: all 0.2s ease;
        }

            .modern-table tbody tr:hover {
                background: #f8f9ff;
                transform: scale(1.001);
            }

        .modern-table td {
            padding: 1.25rem 1rem;
            border: none;
            border-bottom: 1px solid #f1f5f9;
            vertical-align: middle;
        }

        .modern-table tbody tr:last-child td {
            border-bottom: none;
        }

    /* Staff ID Styling */
    .staff-id {
        font-family: 'JetBrains Mono', monospace;
        font-weight: 700;
        color: var(--primary-color);
        background: rgba(74, 58, 255, 0.1);
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        font-size: 0.85rem;
    }

    /* Staff Info Styling */
    .staff-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .staff-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-color) 0%, #6366f1 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 0.9rem;
        box-shadow: 0 4px 12px rgba(74, 58, 255, 0.25);
    }

    .staff-details .staff-name {
        font-weight: 600;
        color: #1a202c;
        font-size: 0.95rem;
        margin-bottom: 0.2rem;
    }

    .staff-details .staff-role {
        font-size: 0.8rem;
        color: var(--text-color-light);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    /* Contact Info */
    .contact-info {
        color: #4a5568;
        font-size: 0.9rem;
    }

    .staff-username {
        font-family: 'JetBrains Mono', monospace;
        font-weight: 600;
        color: #059669;
        background: rgba(5, 150, 105, 0.1);
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        font-size: 0.85rem;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
    }

    .btn-action {
        width: 36px;
        height: 36px;
        border-radius: 8px;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 0.9rem;
    }

        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

    .btn-detail {
        background: var(--action-view-bg);
        color: var(--action-view-text);
    }

    .btn-edit {
        background: var(--action-edit-bg);
        color: var(--action-edit-text);
    }

    .btn-delete {
        background: var(--action-delete-bg);
        color: var(--action-delete-text);
    }

    /* No Results State */
    .no-results {
        text-align: center;
        padding: 3rem 1rem;
        color: var(--text-color-light);
    }

        .no-results i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .no-results p {
            font-size: 1.1rem;
            margin: 0;
        }

    /* Responsive */
    @@media (max-width: 768px) {
        .page-header

    {
        flex-direction: column;
        gap: 1rem;
        align-items: stretch;
    }

    .header-actions {
        flex-direction: column;
    }

    .search-container {
        max-width: none;
    }

    .staff-info {
        gap: 0.75rem;
    }

    .staff-avatar {
        width: 40px;
        height: 40px;
        font-size: 0.8rem;
    }

    }
</style>

<div class="container-fluid py-4">
    <div class="page-header">
        <h1 class="page-title">Staff Management</h1>
        <div class="header-actions">
            <div class="search-container">
                <i class="bi bi-search search-icon"></i>
                <input type="text" class="search-input" id="searchInput" placeholder="Search staff...">
            </div>
            <a class="btn-modern btn-primary-modern" href="@Url.Action("CreateStaff", "Owner", new { ownerId = Model.OwnerId })">
                <i class="bi bi-person-plus-fill"></i>
                Add Staff
            </a>
        </div>
    </div>

    <div class="modern-card">
        <div class="card-body-modern">
            <div class="table-responsive">
                <table class="modern-table table" id="staffTable">
                    <thead>
                        <tr>
                            <th scope="col">Staff ID</th>
                            <th scope="col">Information</th>
                            <th scope="col">Phone</th>
                            <th scope="col">Email</th>
                            <th scope="col">Username</th>
                            <th scope="col" class="text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Staffs != null && Model.Staffs.Any())
                        {
                            foreach (var (staff, index) in Model.Staffs.Select((value, i) => (value, i)))
                            {
                                <tr class="staff-row">
                                    <td>
                                        <div class="staff-id">ST@((index + 1).ToString("D3"))</div>
                                    </td>
                                    <td>
                                        <div class="staff-info">
                                            @{
                                                var initials = string.Concat(staff.Name.Split(' ').Select(x => x[0])).ToUpper();
                                            }
                                            <div class="staff-avatar">@initials</div>
                                            <div class="staff-details">
                                                <div class="staff-name">@staff.Name</div>
                                                <div class="staff-role">Employee</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="staff-phone contact-info">@staff.Phone</div>
                                    </td>
                                    <td>
                                        <div class="staff-email contact-info">@staff.Email</div>
                                    </td>
                                    <td>
                                        <div class="staff-username">@staff.User</div>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            <a class="btn-action btn-detail" title="View Details" href="@Url.Action("DetailStaff", "Owner", new { id = staff.Id, ownerId = Model.OwnerId })">
                                                <i class="bi bi-eye-fill"></i>
                                            </a>
                                            <a class="btn-action btn-edit" title="Edit Staff" href="@Url.Action("EditStaff", "Owner", new { id = staff.Id, ownerId = Model.OwnerId })">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
                                            <a class="btn-action btn-delete" title="Delete Staff" href="@Url.Action("DeleteStaff", "Owner", new { id = staff.Id, ownerId = Model.OwnerId })" onclick="return confirm('Are you sure you want to delete this staff member?');">
                                                <i class="bi bi-trash3-fill"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr id="noStaffRow">
                                <td colspan="6">
                                    <div class="no-results">
                                        <i class="bi bi-people"></i>
                                        <p>No staff members have been created yet</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div id="noSearchResults" class="no-results" style="display: none;">
                <i class="bi bi-search"></i>
                <p>No matching staff members found</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function searchStaff() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase().trim();
            const tableRows = document.querySelectorAll('.staff-row');
            const noResultsDiv = document.getElementById('noSearchResults');
            const staffTable = document.getElementById('staffTable');
            let visibleRows = 0;

            tableRows.forEach(row => {
                const staffName = row.querySelector('.staff-name').textContent.toLowerCase();
                const staffEmail = row.querySelector('.staff-email').textContent.toLowerCase();
                const staffPhone = row.querySelector('.staff-phone').textContent.toLowerCase();
                const staffUsername = row.querySelector('.staff-username').textContent.toLowerCase();

                if (staffName.includes(searchTerm) ||
                    staffEmail.includes(searchTerm) ||
                    staffPhone.includes(searchTerm) ||
                    staffUsername.includes(searchTerm)) {
                    row.style.display = '';
                    visibleRows++;
                } else {
                    row.style.display = 'none';
                }
            });

            // Show/hide table and no results message
            if (visibleRows === 0 && searchTerm !== '') {
                staffTable.style.display = 'none';
                noResultsDiv.style.display = 'block';
            } else {
                staffTable.style.display = '';
                noResultsDiv.style.display = 'none';
            }
        }

        // Real-time search as user types
        document.getElementById('searchInput').addEventListener('input', searchStaff);

        // Enable search on Enter key press
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                searchStaff();
            }
        });
    </script>
}